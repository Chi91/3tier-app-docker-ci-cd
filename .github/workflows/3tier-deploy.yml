
name: 3-tier-Application

on:
    push:
        branches: [ "main" ]

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4

            - name: Setup dotnet
              uses: actions/setup-dotnet@v3
              with:
                dotnet-version: '7.0.x'

            - name: Build & test backend
              working-directory: api
              run: |
                dotnet restore ./Basic3TierAPI/Basic3TierAPI.csproj
                dotnet build ./Basic3TierAPI/Basic3TierAPI.csproj
                dotnet test ./Basic3TierAPI/Basic3TierAPI.csproj
                dotnet pack ./Basic3TierAPI/Basic3TierAPI.csproj

    analyse:
        name: Build and analyze
        runs-on: windows-latest
        needs: build
    
        steps:
            - uses: actions/checkout@v4
              with:
                fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
            - name: Set up JDK 17
              uses: actions/setup-java@v1
              with:
                java-version: 17
            - name: Cache SonarQube packages
              uses: actions/cache@v1
              with:
                path: ~\.sonar\cache
                key: ${{ runner.os }}-sonar
                restore-keys: ${{ runner.os }}-sonar
            - name: Cache SonarQube scanner
              id: cache-sonar-scanner
              uses: actions/cache@v1
              with:
                path: .\.sonar\scanner
                key: ${{ runner.os }}-sonar-scanner
                restore-keys: ${{ runner.os }}-sonar-scanner
            - name: Install SonarQube scanner
              if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
              shell: powershell
              run: |
                New-Item -Path .\.sonar\scanner -ItemType Directory
                dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
            - name: Build and analyze
              shell: powershell
              run: |
                .\.sonar\scanner\dotnet-sonarscanner begin /k:"3tier-docker-chi" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}"
                dotnet build ./api/Basic3TierAPI/Basic3TierAPI.csproj
                .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"


    do:
      name: Build & push Docker Image
      runs-on: Ubuntu-latest
    
      steps:
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3
          
        - name: Login to Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME}}
            password: ${{secrets.DOCKERHUB_TOKEN}}
        
        - name: Build & push images backend
          uses: docker/build-push-action@v6
          with:
            context: .
            file: ./api/Dockerfile 
            push: true
            tags: chi91/3tier-backend-cicd:latest
        
        - name: Build & push images backend
          uses: docker/build-push-action@v6
          with:
            context: .
            file: .//Dockerfile 
            push: true
            tags: chi91/3tier-backend-cicd:latest



    


